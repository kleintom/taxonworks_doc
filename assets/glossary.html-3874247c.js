import{_ as i,M as o,p as r,q as n,R as e,t as a,N as s,a1 as d}from"./framework-5866ffd3.js";const h={},c=d(`<h1 id="glossary" tabindex="-1"><a class="header-anchor" href="#glossary" aria-hidden="true">#</a> Glossary</h1><p><em>I read the word(s) X on this site, or heard them in relation to TaxonWorks. What do they mean according to this community?</em></p><p>Editing these pages? Adding a link to a Glossary term is simple, do it like this:</p><div class="language-Markdown" data-ext="Markdown"><pre class="language-Markdown"><code>[your term](/about/glossary#your-term)
</code></pre></div><h3 id="asserted-distribution" tabindex="-1"><a class="header-anchor" href="#asserted-distribution" aria-hidden="true">#</a> Asserted Distribution</h3><p>Refers to a geographic distribution record for a taxon listed in a publication. It is “asserted” in the sense that the information is simply taken as given from the publication. If it is “original” it is the first record for that OTU in that place.</p><h3 id="buffered" tabindex="-1"><a class="header-anchor" href="#buffered" aria-hidden="true">#</a> Buffered</h3><p>A prefix (<code>buffered_</code>) used to indicate verbatim text that is part of a CollectionObject record. Buffered fields are used TaxonWorks in a digitization workflow as the first step of transcribing labels, or images, to digital data. Buffered fields are write-once, they after addition they should not be changed, nor do they track changes to <code>parsed</code> values.</p><h3 id="cached-values" tabindex="-1"><a class="header-anchor" href="#cached-values" aria-hidden="true">#</a> Cached (values)</h3><p>Fields prefixed in <code>cached_</code> are auto-generated by TaxonWorks based on other values in the record and/or records related to the record. They are used as indicies for searching and for display purposes, particularly <code>cached_&lt;&gt;_html</code> values.</p><h3 id="context-sensitive" tabindex="-1"><a class="header-anchor" href="#context-sensitive" aria-hidden="true">#</a> Context sensitive</h3><p>Something that appears similar at the outset (e.g. an Icon), but changes in behaviour or appearance given where and when it is encountered in the application.</p><h3 id="hot-keys" tabindex="-1"><a class="header-anchor" href="#hot-keys" aria-hidden="true">#</a> Hot keys</h3><p>Typing a combination of keys to trigger a behaviour in the <a href="/about/glossary#UI">UI</a>. Universal hot keys include concepts like <code>ctrl-c</code> for &quot;Copy text to clipboard&quot;. TaxonWorks has numerous hot key combinations that speed tasks.</p><h3 id="identifiers" tabindex="-1"><a class="header-anchor" href="#identifiers" aria-hidden="true">#</a> Identifiers</h3><p>Identifiers distinguish instances, i.e. specific things. TaxonWorks supports many different types of identifiers, and multiple identifiers can be added to individual instances. Some identifier types map 1:1 with physical things like the catalog number attached to specimen in collections, others types are strictly digitial. Some identifiers are <code>Global</code>, some are <code>Local</code>. Global identifiers are those that come from well thought out systems that mint identifiers that are intended to be truly globally (universally) unique. Local identifiers have a user-defined Namespace (the fixed bit of the identifier that doesn&#39;t change across the identifier) and a value, which must be unique within that Namespace.</p><h3 id="is-original" tabindex="-1"><a class="header-anchor" href="#is-original" aria-hidden="true">#</a> Is Original</h3><p>Throughout TW, “Is Original” next to a checkbox means that the information, data, or image has not been published before.</p><h3 id="naive-matching" tabindex="-1"><a class="header-anchor" href="#naive-matching" aria-hidden="true">#</a> Naïve matching</h3><p>Used in context of tracing text in <code>buffered</code> fields to the <code>verbatim</code> fields include parsed out values. &quot;Naïve&quot; means we anticipate a very simple match, string to string, no fuzziness, no AI, etc.</p><h3 id="namespace" tabindex="-1"><a class="header-anchor" href="#namespace" aria-hidden="true">#</a> Namespace</h3><p>A “namespace” is the abbreviation for a collection used in specimen accession numbers. For example, in the accession number label USNM 1234567, “USNM” is the namespace. It is not necessarily the same as a repository, as there may be multiple namespaces used by a given repository.</p><h3 id="object" tabindex="-1"><a class="header-anchor" href="#object" aria-hidden="true">#</a> Object</h3><p>An &quot;object&quot; is an abstract term often used when referencing the representation of a data instance <em>in code</em>. For example, in the underlying code in TaxonWorks there are TaxonName objects, CollectingEvent objects, CollectionObject objects, People objects, etc. We also often speak of adding attributes to objects. In the case of TaxonWorks these additions are called DataAttributes and AlternateValues. In this case we are adding some description to our data-object, for example a name for a &quot;body of water&quot; attribute to our CollectingEvent, or an abbreviation for a term in the tihe title of a Source.</p><h3 id="otu-operational-taxonomic-unit" tabindex="-1"><a class="header-anchor" href="#otu-operational-taxonomic-unit" aria-hidden="true">#</a> OTU (Operational Taxonomic Unit)</h3><p>The biological unit that is useful to work with. They act as proxies.</p><h3 id="parsed-values" tabindex="-1"><a class="header-anchor" href="#parsed-values" aria-hidden="true">#</a> Parsed values</h3><p>In TaxonWorks <code>parsed values</code> are the formalized representation of the data. For example the verbatim date &quot;12.iv.1997&quot; parsed into three fields in TaxonWorks: <code>start_date_day</code> (12), <code>start_date_month</code> (4), <code>start_date_year (1997)</code>.</p><h3 id="parent" tabindex="-1"><a class="header-anchor" href="#parent" aria-hidden="true">#</a> Parent</h3><p>In TW the parent is the next higher taxon in which the taxon of interest is classified, for example, a genus for a species or a subfamily for a genus. By setting the parent, a curator controls how the classification will appear in TW. For example, for a small family in which subfamilies are not used, the parent of a genus may be a family. In other cases, the parent of a genus could be a tribe. This is determined by the curator. The complete taxonomic history of the taxon’s classification is recorded separately on the Browse Nomenclature screen.</p><h3 id="parsing" tabindex="-1"><a class="header-anchor" href="#parsing" aria-hidden="true">#</a> Parsing</h3><p>Breaking down <code>buffered</code> or <code>verbatim</code> values into further fields, or semantic relationships.</p><h3 id="project" tabindex="-1"><a class="header-anchor" href="#project" aria-hidden="true">#</a> Project</h3><p>An instance of TaxonWorks supports multiple projects. Each project may have one or more users. Data in one project are only accessible in that project -- with a couple of key strategic exceptions (e.g. &quot;Community&quot; data like source publications that are public, or people names) where data are shared across projects.</p><h3 id="protonym" tabindex="-1"><a class="header-anchor" href="#protonym" aria-hidden="true">#</a> Protonym</h3><p>“Protonym” in TW refers to a name at the species, genus or family level in its first validly published form. It will always be associated with a literature citation, and it has an author and date, as spelled out by the rules of ICZN. You can think of it as occupying a unique niche in nomenclatural hyperspace. In cases of synonymy, the protonym is not the currently valid name. The currently valid protonym is indicated in many places in by a check mark. However, note that for species names in a taxonomic history, the check mark will indicate the original combination of the name rather than the current one.</p><h3 id="pull-request" tabindex="-1"><a class="header-anchor" href="#pull-request" aria-hidden="true">#</a> Pull Request</h3><p>A simple means to elegantly suggest changes to a website or code repository by editing a clone of that respository and then sending a message back to the origin that includes those changes. The changes can be considered by the maintainers of the original respostory and integrated, or not.</p><h3 id="repository" tabindex="-1"><a class="header-anchor" href="#repository" aria-hidden="true">#</a> Repository</h3><p>Generally speaking, a collection in which specimens are deposited. It may or may not be associated with an institution.</p><h3 id="sop" tabindex="-1"><a class="header-anchor" href="#sop" aria-hidden="true">#</a> SOP</h3><p>&quot;Standard operating proceedure.&quot; In TaxonWorks this might be a project-specific way of doing things. In TaxonWorks you can assert that some or all of your data was derived from some process by annotating it with a Protocol annotation.</p><h3 id="stage-2" tabindex="-1"><a class="header-anchor" href="#stage-2" aria-hidden="true">#</a> Stage 2</h3><p>A temporary(?) code-name referencing a step in the digitization process that represents moving from Buffered or Verbatim values to <code>parsed values</code>.</p><h3 id="staged-or-staged-images" tabindex="-1"><a class="header-anchor" href="#staged-or-staged-images" aria-hidden="true">#</a> Staged (or staged images)</h3><p>A reference to a digitization process in where all data are laid out for complete capture within an image. TaxonWorks uses stages that have areas defined to match specific types of data, for example &quot;Catalog numbers&quot;, &quot;Specimen&quot;, &quot;Image registration&quot;.</p><h3 id="taxon-name" tabindex="-1"><a class="header-anchor" href="#taxon-name" aria-hidden="true">#</a> Taxon Name</h3><p>A taxonomic name, used in the same sense as in the ICZN.</p><h3 id="ui" tabindex="-1"><a class="header-anchor" href="#ui" aria-hidden="true">#</a> UI</h3><p><strong>U</strong>ser <strong>i</strong>nterface = the buttons, inputs, layout, and views in the application.</p><h3 id="ux" tabindex="-1"><a class="header-anchor" href="#ux" aria-hidden="true">#</a> UX</h3><p><strong>U</strong>ser <strong>e</strong>xperience = how you navigate, interpret, think about and make use of the <a href="/about/glossary#UI">UI</a>.</p><h3 id="verbatim-fields" tabindex="-1"><a class="header-anchor" href="#verbatim-fields" aria-hidden="true">#</a> Verbatim fields</h3><p>Verbatim fields in TaxonWorks are a small set of CollectingEvent fields that contain parts of the Verbatim or Buffered values. For example given a label like:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>USA:TX:Brazos Co.
Lick Creek Park
12.iv.1997
M. Yoder, YPT
</code></pre></div><p>Then the TaxonWorks verbatim fields <code>verbatim_locality</code> would contain &#39;Lick Creek Park&#39; and the <code>verbatim_date</code> would include <code>12.iv.1997</code>.</p><h2 id="other-glossaries-and-descriptions" tabindex="-1"><a class="header-anchor" href="#other-glossaries-and-descriptions" aria-hidden="true">#</a> Other glossaries and descriptions</h2><p><em>Heard a term in the context of a biodiversity informatics discussion that you don not understand? One of these resources might define it.</em></p>`,58),l={href:"https://www.tdwg.org/standards/",target:"_blank",rel:"noopener noreferrer"};function p(u,f){const t=o("ExternalLinkIcon");return r(),n("div",null,[c,e("ul",null,[e("li",null,[e("a",l,[a("TDWG Standards"),s(t)]),a(" - TaxonWorks exports, and maps to numerous TDWG defined terms.")])])])}const g=i(h,[["render",p],["__file","glossary.html.vue"]]);export{g as default};
